/* eslint-disable */
/* tslint:disable */
// noinspection JSUnusedGlobalSymbols
// biome-ignore-all
/*
 * ------------------------------------------------------------
 * ## This file was automatically generated by drizzle-zero. ##
 * ## Any changes you make to this file will be overwritten. ##
 * ##                                                        ##
 * ## Additionally, you should also exclude this file from   ##
 * ## your linter and/or formatter to prevent it from being  ##
 * ## checked or modified.                                   ##
 * ##                                                        ##
 * ## SOURCE: https://github.com/BriefHQ/drizzle-zero        ##
 * ------------------------------------------------------------
 */

import type { ZeroCustomType } from "drizzle-zero";
import type { default as zeroSchema } from "./drizzle-zero.config";

/**
 * The Zero schema object.
 * This type is auto-generated from your Drizzle schema definition.
 */
export const schema = {
  tables: {
    chatUsersTable: {
      name: "chatUsersTable",
      columns: {
        chatId: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "chatUsersTable",
            "chatId"
          >,
          serverName: "chat_id",
        },
        userId: {
          type: "string",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "chatUsersTable",
            "userId"
          >,
          serverName: "user_id",
        },
        permission: {
          type: "string",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "chatUsersTable",
            "permission"
          >,
        },
        joinedAt: {
          type: "number",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "chatUsersTable",
            "joinedAt"
          >,
          serverName: "joined_at",
        },
      },
      primaryKey: ["userId", "chatId"],
      serverName: "chat_users",
    },
    chatsTable: {
      name: "chatsTable",
      columns: {
        id: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "chatsTable",
            "id"
          >,
        },
        title: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "chatsTable",
            "title"
          >,
        },
        createdAt: {
          type: "number",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "chatsTable",
            "createdAt"
          >,
          serverName: "created_at",
        },
        updatedAt: {
          type: "number",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "chatsTable",
            "updatedAt"
          >,
          serverName: "updated_at",
        },
        creatorId: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "chatsTable",
            "creatorId"
          >,
          serverName: "creator_id",
        },
        activeMessageId: {
          type: "string",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "chatsTable",
            "activeMessageId"
          >,
          serverName: "active_message_id",
        },
      },
      primaryKey: ["id"],
      serverName: "chats",
    },
    messagesTable: {
      name: "messagesTable",
      columns: {
        id: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "messagesTable",
            "id"
          >,
        },
        status: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "messagesTable",
            "status"
          >,
        },
        createdAt: {
          type: "number",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "messagesTable",
            "createdAt"
          >,
          serverName: "created_at",
        },
        updatedAt: {
          type: "number",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "messagesTable",
            "updatedAt"
          >,
          serverName: "updated_at",
        },
        content: {
          type: "string",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "messagesTable",
            "content"
          >,
        },
        authorId: {
          type: "string",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "messagesTable",
            "authorId"
          >,
          serverName: "author_id",
        },
        chatId: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "messagesTable",
            "chatId"
          >,
          serverName: "chat_id",
        },
        parentMessageId: {
          type: "string",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "messagesTable",
            "parentMessageId"
          >,
          serverName: "parent_message_id",
        },
      },
      primaryKey: ["id"],
      serverName: "messages",
    },
    usersTable: {
      name: "usersTable",
      columns: {
        id: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "usersTable",
            "id"
          >,
        },
        name: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "usersTable",
            "name"
          >,
        },
        email: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "usersTable",
            "email"
          >,
        },
        emailVerified: {
          type: "boolean",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "usersTable",
            "emailVerified"
          >,
          serverName: "email_verified",
        },
        image: {
          type: "string",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "usersTable",
            "image"
          >,
        },
        createdAt: {
          type: "number",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "usersTable",
            "createdAt"
          >,
          serverName: "created_at",
        },
        updatedAt: {
          type: "number",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "usersTable",
            "updatedAt"
          >,
          serverName: "updated_at",
        },
      },
      primaryKey: ["id"],
      serverName: "users",
    },
  },
  relationships: {
    chatUsersTable: {
      user: [
        {
          sourceField: ["userId"],
          destField: ["id"],
          destSchema: "usersTable",
          cardinality: "one",
        },
      ],
      chat: [
        {
          sourceField: ["chatId"],
          destField: ["id"],
          destSchema: "chatsTable",
          cardinality: "one",
        },
      ],
    },
    chatsTable: {
      users: [
        {
          sourceField: ["id"],
          destField: ["chatId"],
          destSchema: "chatUsersTable",
          cardinality: "many",
        },
      ],
      messages: [
        {
          sourceField: ["id"],
          destField: ["chatId"],
          destSchema: "messagesTable",
          cardinality: "many",
        },
      ],
    },
    messagesTable: {
      childMessages: [
        {
          sourceField: ["id"],
          destField: ["parentMessageId"],
          destSchema: "messagesTable",
          cardinality: "many",
        },
      ],
      parentMessage: [
        {
          sourceField: ["parentMessageId"],
          destField: ["id"],
          destSchema: "messagesTable",
          cardinality: "one",
        },
      ],
      chat: [
        {
          sourceField: ["chatId"],
          destField: ["id"],
          destSchema: "chatsTable",
          cardinality: "one",
        },
      ],
    },
    usersTable: {
      chats: [
        {
          sourceField: ["id"],
          destField: ["userId"],
          destSchema: "chatUsersTable",
          cardinality: "many",
        },
      ],
    },
  },
} as const;

/**
 * Represents the Zero schema type.
 * This type is auto-generated from your Drizzle schema definition.
 */
export type Schema = typeof schema;
